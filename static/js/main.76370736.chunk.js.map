{"version":3,"sources":["components/Header/Header.js","components/Search/Search.js","data/dataProvider.js","components/BandInfo/BandInfo.js","hooks/useFetch/useFetchArtist.js","hooks/useFetch/useFetchDisco.js","components/Main/Main.js","hooks/useFetch/useFetchArtists.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Search","props","useState","searchText","setSearchText","onSubmit","e","preventDefault","searchBand","type","className","placeholder","onChange","target","value","URL","HEADER","a","headers","Headers","append","request","Request","fetch","response","ok","json","Error","status","apiFetch","BandInfo","isLoading","isSuccess","isFailed","data","error","fetchState","setFetchState","useCallback","id","discogsConf","TOKEN","result","useFetchArtist","artistState","fetchArtist","console","log","releases","useFetchDisco","discoState","fetchDisco","useEffect","name","images","src","uri","alt","profile","members","map","member","thumbnail_url","length","disco","artist","title","year","thumb","Main","detailID","setdetailID","results","useFetchArtists","artistsState","fetchArtists","text","artists","onClick","rel","drawArtists","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76370736.chunk.js","sourcesContent":["import './Header.css';\nimport React from 'react';\n\nfunction Header() {\n  return (\n    <header>\n      <h1>REACTApi</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import './Search.css';\nimport React, { useState } from 'react';\n\nfunction Search(props) {\n  const [searchText, setSearchText] = useState('');\n\n  const searchTextHandler = (e) => {\n\n    setSearchText(e.target.value)\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    props.searchBand(searchText);\n\n  };\n\n  return (\n    <form onSubmit={submitForm}>\n      <input\n        type=\"text\"\n        className=\"Search__searchText\"\n        placeholder=\"Busca tu banda\"\n        onChange={searchTextHandler}\n      />\n      <input type=\"submit\" value=\"Buscar\" />\n    </form>\n  );\n}\n\nexport default Search;\n","//HEADER EXAMPLE\n// const HEADER = [\n//   'User-Agent',\n//   'accept: application/json',\n//   'Content-Type: application/json',\n//   'musicAPIs v0.1 https://rovilram.github.io/musicAPI/',\n// ];\n\nasync function apiFetch(URL, HEADER) {\n  const headers = new Headers();\n  headers.append(...HEADER);\n  const request = new Request(URL, {\n    headers: headers,\n  });\n  const response = await fetch(request);\n  if (response.ok) return await response.json();\n  else throw new Error(`Request failed with ${response.status}`);\n}\n\nexport default apiFetch;\n","import './BandInfo.css';\nimport React, { useEffect, Fragment } from 'react';\nimport useFetchArtist from '../../hooks/useFetch/useFetchArtist';\nimport useFetchDisco from '../../hooks/useFetch/useFetchDisco';\n\nfunction BandInfo(props) {\n  const [artistState, fetchArtist] = useFetchArtist('');\n  const [discoState, fetchDisco] = useFetchDisco('');\n\n  console.log(artistState);\n\n  useEffect(() => {\n    fetchArtist(props.id);\n    fetchDisco(props.id);\n  }, [fetchArtist, fetchDisco, props.id]);\n\n  const bandMenbers = () => {\n    return artistState.data.members.map((member) => (\n      <div key={member.id} className=\"memberWrapper\">\n        <p className=\"memberName\">{member.name}</p>\n        <img src={member.thumbnail_url} alt={member.name} />\n      </div>\n    ));\n  };\n\n  const bandDisco = () => {\n    console.log('DISCO', discoState.data);\n    return (\n      discoState.data\n        //.filter((disco) => disco.role === 'Main')\n        .map((disco) => (\n          <div key={disco.id} className=\"discoWrapper\">\n            <p className=\"discoText\">\n              {disco.artist} - {disco.title} ({disco.year})\n            </p>\n            <img src={disco.thumb} alt={disco.title} />\n          </div>\n        ))\n    );\n  };\n\n  return (\n    <div className=\"BandInfo__Wrapper\">\n      {artistState.isLoading && 'Loading Band Info...'}\n\n      {artistState.isFailed && 'Error loading Band info.'}\n\n      {artistState.isSuccess && (\n        <Fragment>\n          <h2>{artistState.data.name}</h2>\n          {artistState.data.images && (\n            <img\n              src={artistState.data.images[0].uri}\n              alt={`${artistState.data.name}`}\n              className=\"BandInfo__image\"\n            />\n          )}\n          {artistState.data.profile && (\n            <Fragment>\n              <h3>BIOGRAFY</h3>\n              <div className=\"biografy\">{artistState.data.profile}</div>\n            </Fragment>\n          )}\n          {artistState.data.members && (\n            <Fragment>\n              <h3>MEMBERS</h3>\n              <div className=\"bandMembers\">{bandMenbers()}</div>\n            </Fragment>\n          )}\n          <div className=\"discography\">\n            {discoState.isLoading && 'LOADING DISCOGRAPHY INFO'}\n            {discoState.isFailed && 'ERROR LOADING DISCOGRAPHY'}\n            {discoState.data && discoState.data.length !== 0 && (\n              <Fragment>\n                <h3>DISCOGRAPHY</h3>\n                <div className=\"discography\">{bandDisco()}</div>\n              </Fragment>\n            )}\n          </div>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default BandInfo;\n","import { useCallback, useState } from 'react';\nimport apiFetch from '../../data/dataProvider';\n\nexport default function useFetchArtist() {\n  const [fetchState, setFetchState] = useState({\n    isLoading: false,\n    isSuccess: false,\n    isFailed: false,\n    data: null,\n    error: null,\n  });\n\n  /*     const artist = await apiFetch(URL);\n    return artist; */\n\n  const fetchData = useCallback(async function (id) {\n    const discogsConf = {\n      TOKEN: 'UTtvCaiWDvNQrjQUXmBqZncsMQzXXMrrsOvlTujQ',\n      URL: 'https://api.discogs.com/',\n      HEADER: [\n        'User-Agent',\n        'accept: application/json',\n        'Content-Type: application/json',\n        'musicAPIs v0.1 https://rovilram.github.io/musicAPI/',\n      ],\n    };\n\n    const URL = `${discogsConf.URL}artists/${id}?token=${discogsConf.TOKEN}`;\n\n    try {\n      setFetchState({\n        isLoading: true,\n        isSuccess: false,\n        isFailed: false,\n        error: null,\n        data: null,\n      });\n      const result = await apiFetch(URL, discogsConf.HEADER);\n      setFetchState({\n        isLoading: false,\n        isSuccess: true,\n        isFailed: false,\n        error: null,\n        data: result,\n      });\n      return result;\n    } catch (error) {\n      setFetchState({\n        isLoading: false,\n        isSuccess: false,\n        isFailed: true,\n        error,\n        data: null,\n      });\n    }\n  }, []);\n\n  return [fetchState, fetchData];\n}\n","import { useCallback, useState } from 'react';\nimport apiFetch from '../../data/dataProvider';\n\nexport default function useFetchDisco() {\n  const [fetchState, setFetchState] = useState({\n    isLoading: false,\n    isSuccess: false,\n    isFailed: false,\n    data: null,\n    error: null,\n  });\n\n  /*     const artist = await apiFetch(URL);\n    return artist; */\n\n  const fetchData = useCallback(async function (id) {\n    const discogsConf = {\n      TOKEN: 'UTtvCaiWDvNQrjQUXmBqZncsMQzXXMrrsOvlTujQ',\n      URL: 'https://api.discogs.com/',\n      HEADER: [\n        'User-Agent',\n        'accept: application/json',\n        'Content-Type: application/json',\n        'musicAPIs v0.1 https://rovilram.github.io/musicAPI/',\n      ],\n    };\n    const URL = `${discogsConf.URL}artists/${id}/releases?token=${discogsConf.TOKEN}&sort=year&per_page=200`;\n\n    console.log(\"DISCO URL\", URL)\n\n    try {\n      setFetchState({\n        isLoading: true,\n        isSuccess: false,\n        isFailed: false,\n        error: null,\n        data: null,\n      });\n      const result = await apiFetch(URL, discogsConf.HEADER);\n      setFetchState({\n        isLoading: false,\n        isSuccess: true,\n        isFailed: false,\n        error: null,\n        data: result.releases,\n      });\n      return result;\n    } catch (error) {\n      setFetchState({\n        isLoading: false,\n        isSuccess: false,\n        isFailed: true,\n        error,\n        data: null,\n      });\n    }\n  }, []);\n\n  return [fetchState, fetchData];\n}\n","import './Main.css';\nimport React, { useState, useEffect } from 'react';\nimport Search from '../Search/Search';\nimport BandInfo from '../BandInfo/BandInfo';\nimport useFetchArtists from '../../hooks/useFetch/useFetchArtists';\n\nfunction Main(props) {\n  const [searchText, setSearchText] = useState('');\n  const [detailID, setdetailID] = useState('');\n  //const [artistDetail, setArtistDetail] = useState('');\n\n  const [artistsState, fetchArtists] = useFetchArtists();\n\n  useEffect(\n    function () {\n      searchText && fetchArtists(searchText);\n    },\n    [fetchArtists, searchText],\n  );\n\n  const searchBand = (text) => {\n    console.log('texto de búsqueda:', text);\n    setSearchText(text);\n    setdetailID('');\n  };\n\n  const detailView = (id) => {\n    setdetailID(id);\n  };\n\n  const drawArtists = () => {\n    const artists = artistsState.data.map((artist) => (\n      <article\n        onClick={() => detailView(artist.id)}\n        className=\"artistWrapper\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        key={artist.id}\n      >\n        <div className=\"artistTitle\">{artist.title}</div>\n        <img src={artist.thumb} alt=\"\" />\n      </article>\n    ));\n    artistsState.data.map((artist) => console.log(artist));\n    return artists;\n  };\n\n  return (\n    <main>\n      <Search searchBand={searchBand} />\n      {artistsState.isLoading && <div>Cargando artista</div>}\n      {artistsState.isFailed && <div>Fallo recuperando artista</div>}\n      {!detailID && searchText && artistsState.isSuccess && drawArtists()}\n      {detailID && (\n        <div>\n          <BandInfo id={detailID} />\n        </div>\n      )}\n    </main>\n  );\n}\n\nexport default Main;\n","import { useCallback, useState } from 'react';\nimport apiFetch from '../../data/dataProvider';\n\nexport default function useFetchArtists() {\n  const [fetchState, setFetchState] = useState({\n    isLoading: false,\n    isSuccess: false,\n    isFailed: false,\n    data: null,\n    error: null,\n  });\n\n  /*     const artist = await apiFetch(URL);\n    return artist; */\n\n  const fetchData = useCallback(async function (searchText) {\n    const discogsConf = {\n      TOKEN: 'UTtvCaiWDvNQrjQUXmBqZncsMQzXXMrrsOvlTujQ',\n      URL: 'https://api.discogs.com/',\n      HEADER: [\n        'User-Agent',\n        'accept: application/json',\n        'Content-Type: application/json',\n        'musicAPIs v0.1 https://rovilram.github.io/musicAPI/',\n      ],\n    };\n\n    const URL = `${discogsConf.URL}/database/search?q=${searchText}&token=${discogsConf.TOKEN}&type=artist&per_page=10`;\n\n    try {\n      setFetchState({\n        isLoading: true,\n        isSuccess: false,\n        isFailed: false,\n        error: null,\n        data: null,\n      });\n      const result = await apiFetch(URL, discogsConf.HEADER);\n      setFetchState({\n        isLoading: false,\n        isSuccess: true,\n        isFailed: false,\n        error: null,\n        data: result.results,\n      });\n      return result;\n    } catch (error) {\n      setFetchState({\n        isLoading: false,\n        isSuccess: false,\n        isFailed: true,\n        error,\n        data: null,\n      });\n    }\n  }, []);\n\n  return [fetchState, fetchData];\n}\n","import './Footer.css';\nimport React from 'react';\n\nfunction Footer(props) {\n  return (\n    <footer>\n      <div className=\"footerText\">Buscador de música con REACT</div>\n      <small>\n        <div className=\"footerCopyleft\">🄯 2021 Rovilram</div>\n      </small>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import './App.css';\nimport Header from './components/Header/Header';\nimport Main from './components/Main/Main';\nimport Footer from './components/Footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}